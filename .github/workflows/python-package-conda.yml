name: Python package using Conda

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: اختبار بايثون ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']   # يمكن إضافة إصدارات أخرى مثل '3.8','3.9'
      fail-fast: false

    steps:
      - name: تحميل الكود
        uses: actions/checkout@v4

      - name: إعداد Miniconda (مع mamba)
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          use-mamba: true
          activate-environment: test-env
          environment-file: environment.yml
          auto-activate-base: false

      - name: التخزين المؤقت لحزم Conda
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.CONDA }}/pkgs
            ~/.conda/pkgs
          key: conda-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('environment.yml') }}
          restore-keys: |
            conda-${{ runner.os }}-${{ matrix.python-version }}-

      - name: التخزين المؤقت لحزم pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml', '**/setup.py') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.python-version }}-

      - name: إنشاء وتفعيل البيئة
        run: |
          mamba env create -f environment.yml --force
          conda activate test-env

      - name: تثبيت الحزمة في وضع التطوير
        run: |
          pip install -e . --no-deps

      - name: عرض معلومات البيئة
        run: |
          python --version
          pip --version
          conda info
          conda list

      - name: فحص الكود باستخدام flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: تشغيل الاختبارات باستخدام pytest
        run: |
          pip install pytest pytest-cov
          mkdir -p reports
          pytest --junitxml=reports/junit.xml --cov=./ --cov-report=xml:reports/coverage.xml --cov-report=html:reports/htmlcov

      - name: رفع نتائج الاختبارات
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            reports/
            !reports/htmlcov/

      - name: رفع تقرير التغطية
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: reports/htmlcov/

  security-scan:
    name: فحص الأمان
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: فحص الأمان
        run: |
          pip install bandit safety
          bandit -r . -f html -o reports/bandit.html || true
          safety check --json --output reports/safety.json || true

      - name: رفع تقارير الأمان
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: reports/
